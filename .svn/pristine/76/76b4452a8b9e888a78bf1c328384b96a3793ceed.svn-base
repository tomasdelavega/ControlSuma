<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>file://${ruta_properties}/sistemas_global.properties</value>
				<value>file://${ruta_properties}/sistemas_controlSuma.properties
				</value>
			</list>
		</property>
	</bean>


	<!-- Definimos la jerarquia de roles -->
	<bean id="roleHierarchy"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<property name="hierarchy">
			<value>
				ROLE_CONTROLSUMA.ADMIN > ROLE_CONTROLSUMA.USUARIO
				ROLE_CONTROLSUMA.ADMIN > ROLE_CONTROLSUMA.GESTOR
				ROLE_CONTROLSUMA.GESTOR > ROLE_CONTROLSUMA.USUARIO

			</value>
		</property>
	</bean>


	<!-- las decisiones de acceso se resulven de forma unanime para los dos 
		tipos de votantes -->
	<!-- en cada acceso esta garantizado que el usuario esta autenticado y dispone 
		de un rol valido -->
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<property name="decisionVoters">
			<list>
 				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</property>
	</bean>


	<!-- Fijamos las propiedades de la autenticacion -->
	<security:http auto-config="true" use-expressions="true">

		<security:form-login login-page="/login"
			default-target-url="/auth/home" always-use-default-target="true"
			login-processing-url="/j_spring_security_check"
			authentication-failure-url="/login" />

		<security:logout invalidate-session="true"
			logout-url="/j_spring_security_logout" logout-success-url="/login" />
		<security:access-denied-handler
			error-page="/accessDenied" />
		<security:session-management
			invalid-session-url="/sessionTimeOut">
			<security:concurrency-control
				max-sessions="3000" expired-url="/info" error-if-maximum-exceeded="true" />
		</security:session-management>

		<security:intercept-url pattern="/login"
			access="permitAll" />
		<security:intercept-url pattern="/static/**"
			access="permitAll" />
		<security:intercept-url pattern="/utils/**"
			access="permitAll" />
		<security:intercept-url pattern="/auth/home"
			access="hasAnyRole('ROLE_CONTROLSUMA.USUARIO','ROLE_CONTROLSUMA.ADMIN')" />
		<security:intercept-url pattern="/auth/inventario/**"
			access="hasAnyRole('ROLE_CONTROLSUMA.USUARIO','ROLE_CONTROLSUMA.GESTOR','ROLE_CONTROLSUMA.ADMIN')" />
		<security:intercept-url pattern="/auth/administracion/**"
			access="hasAnyRole('ROLE_CONTROLSUMA.ADMIN')" />

	</security:http>


	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
			<security:user-service>
				<security:user name="administrador" password="administrador"
					authorities="ROLE_CONTROLSUMA.ADMIN" />
				<security:user name="gestor" password="gestor123"
					authorities="ROLE_CONTROLSUMA.GESTOR" />
				<security:user name="usuario" password="usuario123"
					authorities="ROLE_CONTROLSUMA.USUARIO" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- redefinicion de los beans de autenticacion en el contexto seguridad -->
	<!-- security:authentication-manager> <security:ldap-authentication-provider 
		server-ref="ldapServer" user-dn-pattern="cn={0},${sistemas.global.ldap.baseusers}" 
		user-search-base="${sistemas.global.ldap.baseusers}" user-search-filter="(cn={0})" 
		group-search-base="${sistemas.app.ldap.baseroles}" group-role-attribute="cn" 
		group-search-filter="uniquemember={0}"> </security:ldap-authentication-provider> 
		</security:authentication-manager -->


	<!-- redefinicion del servidor en el contexto seguridad -->
	<!-- security:ldap-server id="ldapServer" url="ldap://${sistemas.global.ldap.host}:${sistemas.global.ldap.port}"/ -->
</beans>
