package es.gobcantabria.aplicaciones.controlSuma.web.controller;


import java.util.List;

import javax.validation.Valid;
import javax.servlet.http.HttpServletRequest;





import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import es.gobcantabria.aplicaciones.controlSuma.business.dto.AreaFuncionalDTO;
import es.gobcantabria.aplicaciones.controlSuma.business.service.AreaFuncionalService;
import es.gobcantabria.aplicaciones.controlSuma.exception.ControlSumaException;
import es.gobcantabria.aplicaciones.controlSuma.util.Constantes;
import es.gobcantabria.aplicaciones.controlSuma.web.Filter.AreaFuncionalFilter;
import es.gobcantabria.aplicaciones.controlSuma.web.model.AreaFuncionalModel;;


@Controller
@RequestMapping(value = "/auth/areaFuncional")
public class AreaFuncionalController {
	
	@Autowired  
	private MessageSource messages;
	@Autowired
	private static final Logger logger = LoggerFactory.getLogger(HomeController.class);
	@Autowired
	private AreaFuncionalService areaFuncionalService;
	
	@RequestMapping(value = "/listAreaFuncional", method = RequestMethod.GET)
	public String mostrarListadoDeAreasFuncionalesCompleto(ModelMap model, HttpServletRequest request){
		logger.debug("Entrando en el List de Área Funcional");
		
		String template = Constantes.AREA_FUNCIONAL_LIST_TEMPLATE;
		AreaFuncionalFilter filtro = (AreaFuncionalFilter) request.getSession().getAttribute("filtroAreaFuncional");
		if (filtro == null) {
			filtro = new AreaFuncionalFilter();
		}
		model.put("filtroAreaFuncional", filtro);
		try {
				List<AreaFuncionalDTO> listaAreas = areaFuncionalService.findAll();
				model.put("listAreas", listaAreas);
			return template;
		} catch (Exception ex) {
			logger.error(ex.getMessage());
			request.setAttribute("error", ex.getMessage());
			return "genericErrorPage";
		}
	}
	
	/*
	 * Métodos Get y Post para editar Área Funcional
	 */
	@RequestMapping(value = "/edit", method = RequestMethod.GET)
	public String mostrarFormularioEditar(@RequestParam("id") Long idAreaFuncional, ModelMap model, HttpServletRequest request){
		String template = Constantes.AREA_FUNCIONAL_FORM_TEMPLATE;
		AreaFuncionalModel modelo = null;
		AreaFuncionalDTO dto = areaFuncionalService.getById(idAreaFuncional);
		if(dto != null){
			modelo = new AreaFuncionalModel(dto);
		}else {
			modelo = new AreaFuncionalModel();
		}
		model.put("datosAreaFuncional", modelo);
		return template;
	}
	
	@RequestMapping(value = "/edit", method = RequestMethod.POST)
	public String updateAreaFuncional(@ModelAttribute("datosAreaFuncional") @Valid AreaFuncionalModel areaFuncional, BindingResult result, ModelMap model){
		String template = Constantes.AREA_FUNCIONAL_FORM_TEMPLATE;
		//Se comprueba si hay errores
		if(result.hasErrors()){
			return template;
		}
		AreaFuncionalDTO dto = areaFuncional.convert();
		try{
			areaFuncionalService.update(dto);
		}catch(ControlSumaException e){
			model.put(Constantes.MENSAJE_ERROR, e.getMessage());
		}
		return template;
	}
	/*
	 * 
	 */
}
