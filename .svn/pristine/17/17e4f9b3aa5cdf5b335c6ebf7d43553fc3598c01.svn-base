package es.gobcantabria.aplicaciones.controlSuma.web.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;


import es.gobcantabria.aplicaciones.controlSuma.business.dto.PersonaDTO;
import es.gobcantabria.aplicaciones.controlSuma.business.dto.RolDTO;
import es.gobcantabria.aplicaciones.controlSuma.business.service.PersonaService;
import es.gobcantabria.aplicaciones.controlSuma.business.service.RolService;
import es.gobcantabria.aplicaciones.controlSuma.exception.ControlSumaException;
import es.gobcantabria.aplicaciones.controlSuma.util.Constantes;
import es.gobcantabria.aplicaciones.controlSuma.web.Filter.PersonaFilter;
import es.gobcantabria.aplicaciones.controlSuma.web.model.PersonaModel;

/**
 * Controlador para las Personas 
 * @author tdelavega
 * 
 */

@Controller
@RequestMapping(value = "/auth/persona")
public class PersonaController {
	@Autowired  
	private MessageSource messages;
	@Autowired
	private static final Logger logger = LoggerFactory.getLogger(HomeController.class);
	@Autowired
	private PersonaService personaService;
	@Autowired
	private RolService rolService;
	
	@RequestMapping(value = "/listPersona", method = RequestMethod.GET)
	public String mostrarListadoDePersonasCompleto(ModelMap model, HttpServletRequest request){
		logger.debug("Entrando en el List de Persona");
		
		String template = Constantes.PERSONAS_LIST_TEMPLATE;
		
		PersonaFilter filtro = (PersonaFilter) request.getSession().getAttribute("filtroInventario");
		if (filtro == null) {
			filtro = new PersonaFilter();
		}
		model.put("filtroPersona", filtro);
		
		try {
				List<PersonaDTO> listaPersonas = personaService.findAll();
				model.put("listPersonas", listaPersonas);
			return template;
		} catch (Exception ex) {
			logger.error(ex.getMessage());
			request.setAttribute("error", ex.getMessage());
			return "genericErrorPage";
		}

	}
	
	@RequestMapping(value = "/search")
	public String search(PersonaFilter Filtro, ModelMap model, HttpServletRequest request) {
		logger.debug("Persona search()");
		PersonaFilter filtro = (PersonaFilter) request.getSession().getAttribute("filtroPersona");
		if (filtro == null) {
			filtro = new PersonaFilter();
		}

		model.put("filtroPersona", filtro);
		String template = Constantes.PERSONAS_LIST_TEMPLATE;

		return template;
	}
	
	@RequestMapping(value="/edit", method = RequestMethod.GET)
	public String mostrarFormularioEditar(@RequestParam("id") Long idPersona, ModelMap model, HttpServletRequest request){
		String template = Constantes.PERSONAS_FORM_TEMPLATE;
		PersonaModel modelo = null;
		PersonaDTO dto = personaService.getById(idPersona);
		List<RolDTO> roles = new ArrayList<RolDTO>();
		roles.addAll(rolService.findAll());
		if(dto != null){
			modelo = new PersonaModel(dto);
		}else {
			modelo = new PersonaModel();
		}
		model.put("datosPersona", modelo);
		model.put("listOfRoles", roles);
		return template;
	}
	
	@RequestMapping(value = "/edit", method = RequestMethod.POST)
	public String updatePersona(@ModelAttribute("datosPersona") @Valid PersonaModel persona, BindingResult result, ModelMap model){
		String template = Constantes.PERSONAS_FORM_TEMPLATE;
		if(result.hasErrors()){
			return template;
		}
		PersonaDTO dto = persona.convert();
		try{
			personaService.updatePersona(dto);
		}catch(ControlSumaException e){
			model.put(Constantes.MENSAJE_ERROR, e.getMessage());
		}
		return template;
	}
}
